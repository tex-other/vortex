;; Copyright (c) 1987 The Regents of the University of California.
;; All rights reserved.
;;
;; Permission is hereby granted, without written agreement and without
;; license or royalty fees, to use, copy, modify, and distribute this
;; software and its documentation for any purpose, provided that the
;; above copyright notice and the following two paragraphs appear in
;; all copies of this software.
;; 
;; IN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY FOR
;; DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES, INCLUDING LOST PROFITS, ARISING OUT
;; OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF THE UNIVERSITY OF
;; CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
;;
;; THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES,
;; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
;; AND FITNESS FOR A PARTICULAR PURPOSE.  THE SOFTWARE PROVIDED HEREUNDER IS
;; ON AN "AS IS" BASIS, AND THE UNIVERSITY OF CALIFORNIA HAS NO OBLIGATION TO
;; PROVIDE MAINTENANCE, SUPPORT, UPDATES, ENHANCEMENTS, OR MODIFICATIONS.
;;
;; The above licensing information supersedes all licensing information
;; below.
;
;  RCS Info: $Header: save.vl,v 0.1 87/05/01 13:06:32 john Locked $
;
;  VorTeX - Visually Oriented TeX
;  A source-based WYSIWYG editor for beautiful documents
;
;  This file is part of the source editor/user interface written
;  by John Coker for the VorTeX project under the direction of
;  Prof. Michael A. Harrison of the University of California at
;  Berkeley.
;
;  Copyright (c) 1987 John L. Coker
;  University of California, Berkeley
;  john@renoir.Berkeley.EDU
;  vortex@renoir.Berkeley.EDU
;
;  This file intact and any code derived from it are copyright
;  John Coker and the Regents of the University of California.
;  All rights reserved by the author.  See the copyright notice
;  distributed with this software for a complete description of
;  the conditions under which it is made available.
;
;  save.vl - the save-modified-files functions
;

;
;  DOCUMENTATION
;
;  Name: save-modified-files
;  Call: (save-modified-files)
;  Retu: count
;  Desc: This function writes out all modified file-visiting buffers
;	and returns the number of buffers actually written out.
;  SeeA: query-save-modified-files
;

(setq %saved-file-count 0)

(defun save-one-modified-file (buffer)
  (if (and (buffer-file-name buffer) (buffer-modified-p buffer))
      (prog
       (write-file buffer)
       (setq %saved-file-count (+ %saved-file-count 1)))))

(defun save-modified-files ()
  (interactive)
  (setq %saved-file-count 0)
  (foreach-buffer save-one-modified-file)
  %saved-file-count)

;
;  DOCUMENTATION
;
;  Name: query-save-modified-files
;  Call: (query-save-modified-files)
;  Retu: count
;  Desc: This function queries the user as to whether each modified file
;	visiting buffer should be saved.  It returns a count of the
;	numbers actually written out.
;  SeeA: save-modified-files
;

(defun query-save-one-modified-file (buffer)
  (if (and (buffer-file-name buffer) (buffer-modified-p buffer)
	   (y-or-n (format "Save buffer %s? " buffer)))
      (prog
       (write-file buffer)
       (setq %saved-file-count (+ %saved-file-count 1)))))

(defun save-modified-files ()
  (interactive)
  (setq %saved-file-count 0)
  (foreach-buffer query-save-one-modified-file)
  %saved-file-count)

